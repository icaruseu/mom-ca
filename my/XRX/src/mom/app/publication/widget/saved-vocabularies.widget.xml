<?xml version="1.0" encoding="UTF-8" standalone="no"?><xrx:widget xmlns:xrx="http://www.monasterium.net/NS/xrx" xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms">
    <xrx:id>tag:www.monasterium.net,2011:/mom/widget/saved-vocabularies</xrx:id>
    <xrx:title>
        <xrx:i18n>
            <xrx:key>saved-vocabularies</xrx:key>
            <xrx:default>Saved vocabularies</xrx:default>
        </xrx:i18n>
    </xrx:title>
    <xrx:subtitle/>
    <xrx:description/>
    <xrx:author>niklas.tscherne@uni-graz.at</xrx:author>
    <xrx:licence>
This is a component file of the VdU Software for a Virtual Research Environment for the handling of Medieval charters.

As the source code is available here, it is somewhere between an alpha- and a beta-release, may be changed without any consideration of backward compatibility of other parts of the system, therefore, without any notice.

This file is part of the VdU Virtual Research Environment Toolkit (VdU/VRET).

The VdU/VRET is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

VdU/VRET is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with VdU/VRET.  If not, see http://www.gnu.org/licenses.

We expect VdU/VRET to be distributed in the future with a license more lenient towards the inclusion of components into other systems, once it leaves the active development stage.
  </xrx:licence>
    <xrx:portal>tag:www.monasterium.net,2011:/mom/portal/desktop</xrx:portal>
    <xrx:init>
        <xrx:processor>
            <xrx:xformsflag>true</xrx:xformsflag>
            <xrx:jqueryflag>true</xrx:jqueryflag>
        </xrx:processor>
    </xrx:init>
    <xrx:csss>
        <xrx:css>tag:www.monasterium.net,2011:/mom/css/charter-preview</xrx:css>
        <style type="text/css">

#dcharter-preview-main{{
float:left;
width:800px;
}}
#dcharter-preview-main .charter *{{
line-height:1.6em;
}}
#dcharter-preview-main .charter{{
position:relative;
width:100%;
float:left;
background:rgb(245,245,245);
}}
#dcharter-preview-main .charter-preview{{
position:relative;
float:left;
width:100%;
background:rgb(245,245,245);
border-bottom:solid white 5px;
}}
#dcharter-preview-main .inner-charter-preview{{
position:relative;
float:left;
width:100%;
margin:15px;
}}
#dcharter-preview-main .charter-info-and-actions{{
display:inline;
position:relative;
float:left;
width:25%;
border-left:solid white 3px;
padding-left:10px;
}}
#dcharter-preview-main .container{{
float:left;
width:65%;
padding-right:10px;
}}
#dcharter-preview-main .charter-info-and-actions *{{
font-size:13px;
}}
#dcharter-preview-main .fieldset{{
border:solid #C8C8C8 1px;
margin-top:10px;
}}
#dcharter-preview-main .inner-fieldset{{
margin:5px;
}}
div.bookmark-icon{{
position:absolute;
right:220px;
}}
.note-field{{
	position:relative;
	border:solid #C8C8C8 1px;
  padding:3px;
}}
.noteBobble {{
	display:none;
	position:fixed;
	left:400px;
	bottom:35%;
	z-index:20;
	width: 400px;
	height: 160px;
	background-color: #F6F6F6;
	padding:20px;
  -moz-border-radius:3px;
  -webkit-border-radius:3px;
  -khtml-border-radius:3px;
  border-radius:3px;
  -moz-box-shadow:    4px -3px 10px 1px #202020;
  -webkit-box-shadow: 4px -3px 10px 1px #202020;
  box-shadow:         4px -3px 10px 1px #202020;
}}
.noteBobble .xfLabel{{ 
	color:rgb(142,163,132);
	font-weight:bold;
}}   
.noteBobble .xfValue{{ 
	top: 5px !important;
  position:relative;
  width:400px !important;
  max-height: 100px !important;
}}
.noteBobble .xfTrigger{{
	width:30px !important;
}}  
.edit-box{{
  padding:3px;
}}

    </style>
    </xrx:csss>
    <xrx:jss>
         <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/jquery</xrx:resource>
   </xrx:jss>
    <xrx:model>
    { bookmark:model(conf:param('request-root')) }
    { publication:model(conf:param('request-root')) }
  </xrx:model>
    <xrx:view>
  {
    (: saved vocabularies :)
    let $unreleased-vocabs := $xrx:user-xml//xrx:saved[xrx:freigabe='no']/xrx:id/text()[contains(., 'controlledVocabulary')]

    (: pagination :)
    let $numentries := count($unreleased-vocabs)
    let $startstop := pagination:startstop($numentries)
    let $navigation := pagination:navi($numentries)
    
    return
    <div data-demoid="bbbeea5c-99a4-47e8-abc2-5aa82a49a5f0" id="dsaved-vocabs">
            <div class="h2" data-demoid="c6e9af97-9a53-4451-9a88-2ffee4f871a5">
                <xrx:i18n>
                    <xrx:key>saved-vocabularies</xrx:key>
                    <xrx:default>Saved Vocabularies</xrx:default>
                </xrx:i18n>
            </div>
      { $navigation }
            <xf:group>
                <div data-demoid="5a92598b-dcbf-4cf7-8449-d55a272d614e" id="dcharter-preview-main">
          {
          for $vocab at $num in $unreleased-vocabs[position() = $startstop]
          
          (: get vocab from public area :)
          let $published-vocab := root(metadata:base-collection('controlledVocabulary', 'public')//atom:id[.=$vocab])
          
          (: is vocabulary bookmarked? :)
          let $is-bookmarked := bookmark:is-bookmarked($xrx:user-xml, $vocab)
          
          (: get info for published vocabulary :)
          let $vocab-name := $published-vocab//atom:content/rdf:RDF/skos:ConceptScheme/skos:prefLabel[1] (: TODO: generalize and make language-dynamic :)
          
          (: status of the vocabulary :)
          let $is-bookmarked := bookmark:is-bookmarked($xrx:user-xml, $vocab)
          let $saved-by-current-user := publication:is-saved($xrx:user-xml, $vocab)
          let $saved-by-any-user := publication:is-saved($user:db-base-collection/xrx:user, $vocab)
          let $saved-by-user := publication:saved-by-user($user:db-base-collection/xrx:user, $vocab)
          
          (: status of the user :)
          let $is-moderator := auth:matches(<xrx:rule>
                        <xrx:user/>
                        <xrx:role>moderator</xrx:role>
                    </xrx:rule>)
                  
          return
          <div class="charter" data-demoid="b32e2701-abf4-4310-8526-8b6f0ee44153" id="ch{ $num }">
              <div class="charter-preview" data-demoid="4e02e647-178f-45e4-b62b-7077f305237e">
                  <div class="inner-charter-preview" data-demoid="77a34be6-a077-4229-8d0c-333834dfbb57">
                      
                      <!-- ################## Common Info ################# -->
                      <div data-demoid="eaa667ea-0054-4d24-9164-a9a8ce5b7bc9">
                          <b>
                              <xrx:i18n>
                                  <xrx:key>vocabulary</xrx:key>
                                  <xrx:default>Vocabulary</xrx:default>
                              </xrx:i18n>
                              <span>:Â </span>
                          </b>
                          <span>{ $vocab-name }</span>
                      </div>
                      <br/>
                      <br/>
                      <div class="charter-info-and-actions" data-demoid="a66d8ee9-a351-4489-a0e5-0a4b0cd9299e">
                          <div data-demoid="go-to-vocab">
                              <a href="{ conf:param('request-root') }skos-editor?vocab={ skos-edit:get-vocab-filename($vocab) }">
                                  <xrx:i18n>
                                      <xrx:key>open-in-skosedit</xrx:key>
                                      <xrx:default>Open Vocabulary in SKOS-Editor</xrx:default>
                                  </xrx:i18n>
                              </a>
                          </div> 
                          <div data-demoid="ccf5e927-6e78-4b54-9647-f4f03aeef9a0">
                              <a href="{ conf:param('request-root') }charter-version-difference?id={ $vocab }&amp;backlink=saved-charters">
                                  <xrx:i18n>
                                      <xrx:key>version-difference</xrx:key>
                                      <xrx:default>Version Difference</xrx:default>
                                  </xrx:i18n>
                              </a>
                          </div>
                          <div data-demoid="delete-local-copy">
                              <a class="delete-local-copy" href="{$vocab}" onclick="return false;">
                                  <xrx:i18n>
                                      <xrx:key>remove-vocabulary</xrx:key>
                                      <xrx:default>Remove Vocabulary</xrx:default>
                                  </xrx:i18n>
                              </a>
                          </div>

                          { 
                          bookmark:trigger(
                          $is-bookmarked,
                          $vocab,
                          $num,
                          conf:param('request-root'),
                          <span>
                              <xrx:i18n>
                                  <xrx:key>add-bookmark</xrx:key>
                                  <xrx:default>Add bookmark</xrx:default>
                              </xrx:i18n>
                          </span>,
                          <span>
                              <xrx:i18n>
                                  <xrx:key>remove-bookmark</xrx:key>
                                  <xrx:default>Remove bookmark</xrx:default>
                              </xrx:i18n>
                          </span>
                          ) 
                          }
                      </div>
                  </div>
              </div>
          </div>
                    }
        {
        (: display message for released vocabularies that they are awaiting review by the moderator :)
        let $released-vocabs := $xrx:user-xml//xrx:saved[xrx:freigabe='yes']/xrx:id/text()[contains(., 'controlledVocabulary')]
        for $vocab in $released-vocabs
        let $published-vocab := root(metadata:base-collection('controlledVocabulary', 'public')//atom:id[.=$vocab])
        let $vocab-name := $published-vocab//atom:content/rdf:RDF/skos:ConceptScheme/skos:prefLabel[1] (: TODO: generalize and make language-dynamic :)
        return 
        <div class="charter">
            <div class="charter-preview">
                <div class="inner-charter-preview">
                    <div data-demoid="vocab-under-review">
                        <b>
                            <xrx:i18n>
                                <xrx:key>vocabulary</xrx:key>
                                <xrx:default>Vocabulary</xrx:default>
                            </xrx:i18n>
                            <span>:Â </span>
                        </b>
                        <span>{ $vocab-name }</span>
                    </div>
                    {concat('This vocabulary is currently under review by the following moderator: ', $xrx:user-xml/xrx:moderator/text())}
                </div>
            </div>
        </div>
        }
                    <script type="text/javascript">
                        $('.delete-local-copy').click(function () {{
                        var vocabID = $(this).attr("href");
                        
                        $.ajax({{
                            url: "/mom/service/remove-vocabulary?vocab=" + vocabID,
                            type: "POST",
                            contentType: "application/xml",
                            success: function (data) {{
                                window.location.reload();
                            }}
                        }})
                        
                        //window.location.reload();
                        }});
                    </script>
                    { $navigation }
                </div>
            </xf:group>
    </div>
        }
    </xrx:view>
</xrx:widget>