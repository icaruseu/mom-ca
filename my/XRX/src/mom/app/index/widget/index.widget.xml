<?xml version="1.0" encoding="UTF-8" standalone="no"?><xrx:widget xmlns:xrx="http://www.monasterium.net/NS/xrx" xmlns="http://www.w3.org/1999/xhtml">
  <xrx:id>tag:www.monasterium.net,2011:/mom/widget/index</xrx:id>
  <xrx:inherits>tag:www.monasterium.net,2011:/mom/widget/charter-preview</xrx:inherits>
  <xrx:author>martina.buergermeister@uni-graz.at</xrx:author>
  <xrx:licence>
This is a component file of the VdU Software for a Virtual Research Environment for the handling of Medieval charters.

As the source code is available here, it is somewhere between an alpha- and a beta-release, may be changed without any consideration of backward compatibility of other parts of the system, therefore, without any notice.

This file is part of the VdU Virtual Research Environment Toolkit (VdU/VRET).

The VdU/VRET is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

VdU/VRET is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with VdU/VRET.  If not, see http://www.gnu.org/licenses.

We expect VdU/VRET to be distributed in the future with a license more lenient towards the inclusion of components into other systems, once it leaves the active development stage.
   </xrx:licence>
   <xrx:variables>
      <!-- charter context information -->
    <xrx:variable>
      <xrx:name>$wcharters:metadata-charter-context-collection</xrx:name>
      <xrx:expression>(metadata:base-collection('collection', $charter:rcollectionid, 'public')|metadata:base-collection('mycollection', $charter:rcollectionid, 'public'))</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$wcharters:metadata-charter-context-entry</xrx:name>
      <xrx:expression>$wcharters:metadata-charter-context-collection//cei:cei/ancestor::atom:entry</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$wcharters:charter-context-name</xrx:name>
      <xrx:expression>($wcharters:metadata-charter-context-entry//cei:provenance/text(),$wcharters:metadata-charter-context-entry//cei:titleStmt/cei:title/text())</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$wcharters:charter-context-short-name</xrx:name>
      <xrx:expression>($wcharters:metadata-charter-context-entry//cei:provenance/@abbr/string(),$wcharters:charter-context-name)[1]</xrx:expression>
    </xrx:variable>
    <!-- linked archival fonds -->
    <xrx:variable>
      <xrx:name>$wcharters:linked-fond-charter-base-collection</xrx:name>
      <xrx:expression>mycollection:linked-fond-charter-base-collection($wcharters:metadata-charter-context-collection)</xrx:expression>
    </xrx:variable>
    <!-- charter base collection -->
    <xrx:variable>
      <xrx:name>$wcharters:metadata-charter-collection</xrx:name>
      <xrx:expression>(metadata:base-collection('charter', $charter:rcollectionid, 'public'), $wcharters:linked-fond-charter-base-collection)</xrx:expression>
    </xrx:variable>
    <!-- block-wise navigation -->
    <xrx:variable>
      <xrx:name>$windex:block</xrx:name><!-- schon angepasst -->
      <xrx:expression>xs:integer(if(request:get-parameter('block', '') != '') then request:get-parameter('block', '-1') else '1')</xrx:expression>
    </xrx:variable>
     <!-- suchergebnisse -->
     <xrx:variable>
      <xrx:name>$indexterm</xrx:name>
      <xrx:expression>if(not(exists($xrx:tokenized-uri[3]))) then '' else if(starts-with($xrx:tokenized-uri[3], 'P_')) then $xrx:tokenized-uri[3] else (concat('#', $xrx:tokenized-uri[3]))</xrx:expression>
    </xrx:variable>        
    <xrx:variable>    
      <xrx:name>$windex:index</xrx:name>
      <xrx:expression>if($xrx:tokenized-uri[3]!= '#') then index:index-abfrage($indexterm) else()</xrx:expression>
    </xrx:variable>
    <xrx:variable>
    <xrx:name>$windex:hits</xrx:name>
    <xrx:expression>count($windex:index)</xrx:expression>
    </xrx:variable>    
   <xrx:variable>
    <xrx:name>$blocks</xrx:name>
    <xrx:expression>floor(number($windex:hits) div 30) +1 </xrx:expression>
    </xrx:variable>
    <!-- overwrite -->
    <xrx:variable>
      <xrx:name>$charters:start</xrx:name>
      <xrx:expression>$windex:block * 30 - 29</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$charters:stop</xrx:name>
      <xrx:expression>if($windex:hits lt 30) then $windex:hits else($windex:block * 30)</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$charters:previous-block</xrx:name>
      <xrx:expression>if($windex:block = 1) then 1 else $windex:block - 1</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$wcharters:previous-block-pos</xrx:name>
      <xrx:expression>if($windex:block = 1) then 1 else $windex:block - 1</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$wcharters:next-block-pos</xrx:name>
      <xrx:expression>if($windex:block = $windex:hits div 30) then 1 else $windex:block + 1</xrx:expression>
    </xrx:variable> 
    
    <!-- var $setresults speichert die suchergebnisse (ganze atom:entrys),
    Sortierung der Suchergebnisse passiert in index.xqm,
     dann kann in der korrekten Reihefolge geblÃ¤ttert werden (browse search results)-->
    <xrx:variable>
    <xrx:name>$setresults</xrx:name>
    <xrx:expression>if ($search:RESULT) then session:set-attribute($search:RESULT, $windex:index) else () </xrx:expression>
    </xrx:variable> 
    <xrx:variable>
      <xrx:name>$index-use-text</xrx:name>
      <xrx:expression>htdoc:process(htdoc:get('tag:www.monasterium.net,2011:/mom/htdoc/index-use'))</xrx:expression>
    </xrx:variable>
   <xrx:variable>   
   <xrx:name>$sprache</xrx:name>
   <xrx:expression>$index:sprache</xrx:expression>   
   </xrx:variable>   
   <xrx:variable>
   <xrx:name>$alphabet</xrx:name>
   <xrx:expression>('A', 'B','C','D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y','Z', 'A-Z')</xrx:expression>
   </xrx:variable>
   <xrx:variable>
   <xrx:name>$voc</xrx:name>
   <xrx:expression>$xrx:tokenized-uri[2]</xrx:expression>
   </xrx:variable>   
      <xrx:variable>
   <xrx:name>$coll</xrx:name>
   <xrx:expression>if(index:index-check($voc))then ('person') else('controlledVocabulary')</xrx:expression>
   </xrx:variable>
      <xrx:variable>
   <xrx:name>$atomid</xrx:name>
   <xrx:expression>concat('tag:www.monasterium.net,2011:/',$coll,'/', $voc)</xrx:expression>
   </xrx:variable>
       <xrx:variable>
   <xrx:name>$momcollpath</xrx:name>
   <xrx:expression>concat('/db/mom-data/metadata.', $coll, '.public/')</xrx:expression>
   </xrx:variable>
       <xrx:variable>
   <xrx:name>$vocabulary</xrx:name>
   <xrx:expression>collection($momcollpath)/atom:entry[atom:id/text()= $atomid]</xrx:expression>
   </xrx:variable>
   <xrx:variable>
   <xrx:name>$breadcrumb1</xrx:name>
   <xrx:expression> if($coll = 'person') then if($vocabulary//tei:titleStmt/tei:title/@xml:lang = $sprache) 
                                                  then $vocabulary//tei:titleStmt/tei:title[@xml:lang = $sprache]/text() 
                                                  else($vocabulary//tei:titleStmt/tei:title[1]/text())
                        else ( if($vocabulary//skos:ConceptScheme/skos:prefLabel/@xml:lang = $sprache)then 
                             $vocabulary//skos:ConceptScheme/skos:prefLabel[@xml:lang= $sprache]/text()
                            else($vocabulary//skos:ConceptScheme/skos:prefLabel[1]/text()))
    </xrx:expression>
   </xrx:variable>
    <xrx:variable>
   <xrx:name>$teile</xrx:name>
   <xrx:expression>count($xrx:tokenized-uri)</xrx:expression>
   </xrx:variable>   
   </xrx:variables>
   
  <xrx:portal>tag:www.monasterium.net,2011:/mom/portal/default</xrx:portal>
  <xrx:init>
    <xrx:processor>
      <xrx:xformsflag>true</xrx:xformsflag>
      <xrx:jqueryflag>true</xrx:jqueryflag>
    </xrx:processor>
  </xrx:init>
  <xrx:csss>
     
   <xrx:css>tag:www.monasterium.net,2011:/mom/css/charter-preview</xrx:css>
   <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/external/css/layout</xrx:resource>

    <style type="text/css">
     
 /* **************************
    Seite einrichten
   ************************ */


  
  div#this-main {{
          position:relative;
          
         }}
          
            
 
 .ui-button {{
           padding: .4em 1em;
           display: inline-block;
           position: relative;
           line-height: normal;
           margin-right: .1em;
          /* cursor: pointer;*/
           vertical-align: middle;
           text-align: center;
           -webkit-user-select: none;
           -moz-user-select: none;
           -ms-user-select: none;
            user-select: none;
             
           }}
        
            
  
   /* *********
       Filter button
        ***********
  */
            button#button{{
                width: 150px;
                text-align: center;
                padding: 20px;
            
            }}


#leftframe {{
      position:relative;
      float:left;     
      width: 30%;      
      left:5px;
      /*margin-right:3em;*/
}}

#rightframe{{
      position:relative;      
      float:left;
      width:60%;      
      
            
}}

#rightframe p {{
      margin-top:0;
      font-size:0.8em;
      padding:0 1em;      
}}

.hits {{
    position:relative;
    float:left;    
    width:100%;
    padding: 5px;
    margin-top:5px;
    margin-bottom:5px;
    background:rgb(245, 245, 245);
    border-bottom: 3px solid #9e9e9e;
    clear:both;    
}}

.hits span {{
      padding:3px;
}}
#block-navi a{{
    padding: 3px;
}}

span.breadcrumb {{
  color:#72856C; /*dunkelgrÃ¼n*/
}}

/* *****************************
    Ã¼bernommen aus search2.widget.xml
*************************************/
#dcharter-preview-main {{
  position:relative;
  float:left; 
  
}}

#dcharter-preview-main .charter-preview
 {{
  position:relative;
  float:left; 
  /*width:60%; */
  background:rgb(245,245,245);
  border-bottom:solid white 5px;
}}

#dcharter-preview-main .charter *{{
  line-height:1.6em;
}}

#dcharter-preview-main .charter{{
  position:relative;
  width:73% !important;
  float:left;
  background:rgb(245,245,245);
}}


.glossary-entry {{    
         
    background:rgb(245, 245, 245);    
    border-bottom: 3px solid #9e9e9e; /*#8EA384;*/         
    //overflow-y:auto;
    width:101%;
    
}}

.glossary-open {{
    background:rgb(245, 245, 245);    
    border-bottom: 3px solid #9e9e9e; /*#8EA384;*/
    padding-left: 3px;    
    width:101%;
}}

.moreless {{
        position:relative;
        float:left;
        font-size:0.6em;
        color: white;
        margin-right:.7em;
        cursor:pointer;
}}

.moreless:hover {{
      background-color:#4d4d4d;
}}


.choose ul {{
  margin:0;
  padding:10px 10px; 
  list-style-type:none;
  width:80%; /*50%*/

}}
li {{
    margin:0;
    padding:0;
}}

li a {{
    font-size:1.1em !important;
}}

ul {{
  margin:0;
  list-style-type:none;
  padding: 7px;
  
}}

ul.menu span.ui-button-text {{
    font-size: 0.8em !important;
    padding:0 !important;
    margin: 0 !important;
    
}}

.glossary-entry h2,
.glossary-open h2 {{
    background:rgb(158, 158, 158);
    padding: 5px 0 5px 5px;
    margin-top:0;
    color: white;   

}}

.glossary-entry div,
.glossary-open div {{
  padding:5px;
}}

.entry p {{
  font-size:1em !important;  
}}

 .glossary-open div ul li,
 .glossary-entry div ul li
 {{
  font-size:0.7em !important;
}}


.ui-accordion .ui-accordion-content {{
    padding:1em .2em;

}}

div.accordion div {{
        padding:0.2em;        
}}
a.filter {{
      font-size:1.1em !important;
     
}}


#dcharter-preview-main .inner-charter-preview{{
  position:relative;
  float:left;
  width:100%;
  margin:15px;
}}



#dcharter-preview-main .container{{
  float:left;
  width:60% !important;
  padding-right:10px;
}}

#dcharter-preview-main .charter-info-and-actions *{{
  font-size:13px;
}}

#dcharter-preview-main .fieldset{{
  border:solid #C8C8C8 1px;
  margin-top:10px;
}}

#dcharter-preview-main .inner-fieldset{{
  margin:5px;
}}





#dsearch {{
  position:relative;
  float:left;
  width:960px;
  text-align:left;
}}

#search-form {{
  margin-left: 25%;
  margin-top: 100px;
}}

#search-options {{
  margin-top:20px;
  font-size: .9em;
}}

#result {{
  width:960px;
  position:relative;
  float:left;
  text-align:left;
}}

#result .hi {{
  background:yellow;
}}

#input .xfValue {{
  height:32px;
  width:300px;
}}

#input-search .xfValue {{
  padding-top:10px;
}}

#input-search * {{
  font-size:110%;
}}

#input .dijitButtonText {{
  padding:6px;
}}

#result .select-block {{
  position: relative;
  float: right;
  margin-top: 10px;
  margin-bottom:20px;
  margin-right: 10px;
}}

#result .hits {{
  position: relative;
  float: right;
  margin-right: 10px;
}}

#result .block-navi-link {{
  float:left;
}}

#archives-search, #col-select {{
  width:80%;
}}

#search-field, #search-trigger {{
  height:40px;
  font-size:110%;
}}

#search-field {{
  width:50%;
}}

.confine-label {{
  width:200px;
}}

.confine-trigger-div {{
  width: 100%;
  text-align: right;
  margin-bottom: 20px;
}}

.confine-trigger {{
  margin-right: 10px;
}}

#result-options {{
  padding-left:0;
  position: relative;
  float: left;
  width: 79%;

}}

#result-options div {{
  position: relative;
}}

#result-options * {{
  font-size: .97em;
}}

.light-grey {{
  color: rgb(160, 160, 160);
}}

#result .charter-context * {{
  font-size: .8em;
}}

#result .archive-label {{
  margin-top: 8px;
  text-decoration: underline;
}}

div.buchstaben {{
    border:0;
    width:100%;
    margin-left: -7px;  
    margin-bottom:15px;
    padding-bottom:15px;    
    
}}

.buchstaben span.ui-menu-item {{
    width:10%;
    /*padding:.3em;*/
    float:left;
    
}}



.ui-menu-item a{{
          padding:0px !important;
          margin:0 !important;          
         
          
}}

.buchstaben .ui-menu-item a.ui-state-focus {{
          border:0;
          background:#EFF3E1;
          margin:0;
          padding:0;

}}






#centre {{
    margin: 0 auto;
    width:60%;
}}

#zentral ul {{
  /*height:300px;
  width:100%;*/
  border: none !important;

}}

#zentral ul li {{
   width:40%;
   float:left;
}}

#zentral a.ui-button {{
     height:100px;
     position:relative;     
     margin:3px;
}}

#zentral a.ui-button span {{
    position:absolute;
    top:50%;
    left:50%;
    margin-right: -50%;
    transform: translate(-50%, -50%);
    }}

.none {{
        visibility:hidden;
}}

span.no-result {{
    display:block;
    width:50%;
    padding:10px;
    margin-top:30px !important;
}}

span.klein {{
    font-size: 0.7em;
    color:grey;
    
}}
span.klein b {{
      font-size:1em;
      background-color:yellow;
}}

div.filterbox {{
      width: 100%;
}}

.zur {{
    padding-bottom: 10px;
    padding-left:0;
    padding-top:0;
}}


.zusatz {{
      background:#9e9e9e;
      color:white;
      text-align:left;
      margin-left: -0.2em;
      width:99%;
      padding:0.5em !important;
      font-size:0.6em;
      font-weight:bold;
}}

#charter-info-and-actions {{
        width:auto;
}}

div.narrower {{ 
        padding-left: 1em;
}}

ul.namelist {{
     position:relative;
     float:left;

}}


  </style> 
  </xrx:csss>
    <xrx:jss>     
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/jquery</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/external/mousewheel</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/core</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/widget</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/mouse</xrx:resource>       
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/draggable</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/resizable</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/selectable</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/button</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/draggable</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/droppable</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/menu</xrx:resource>
        <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/ui/accordion</xrx:resource>        
        
        <xrx:resource>tag:www.monasterium.net,2011:/mom/resource/js/index</xrx:resource>
     
  </xrx:jss>
    <xrx:view>
    <!-- the widget starts at uri mom/index
    this lists all vocabularies in the db
    when you choose a voc the uri grows and ends with the name of the voc (xrx:tokenized-uri[2])
    then  your can choose a lemma in the voc, the uri grows again xrx:tokenized-uri[3] returns the lemma.
    The UI has 2 main parts leftframe and rightframe, leftframe is used vor the index-search-navi
    and rightframe shows the results.
    -->
    <div id="this-main">
    {  
      if (count($xrx:tokenized-uri) gt 1)then
      <div id="leftframe">
        <div id="links">
         <ul class="zur">         
            <li><a href="{concat(conf:param('request-root'),'index')}"><xrx:i18n>
              <xrx:key>back-to-index-overview</xrx:key>
              <xrx:default>Back to index overview</xrx:default>
            </xrx:i18n></a></li>       
       </ul>  
       </div>        
        <div id="result-options" class="this-widget">           
          <div class="filterbox">
          <!-- the index app provides prosopografic data and other vocs
          They are stored in different locations and standards (skos, TEI).
          If there is a skos: the ui tranlates the skos into a drop down menu
          if there is a TEI: an alphabetical order filters prosopografic data.         
           -->          
          <h2><xrx:i18n>
              <xrx:key>choose-a-lemma</xrx:key>
              <xrx:default>Choose a lemma</xrx:default>
            </xrx:i18n>:</h2>         
           {                   
         if ($vocabulary//skos:hasTopConcept) then                
                 for $top in $vocabulary//skos:hasTopConcept
                 let $label1 := <a>{ $vocabulary//skos:Concept[@rdf:about= data($top/@rdf:resource)]//text()}</a>
                 let $rdfabout1 := data($top/@rdf:resource)
                 let $memo:= if($rdfabout1 != "") then session:set-attribute(replace($rdfabout1,'#', ''), $label1) else ()
                 return              
                 <div class="accordion">
                 <h3>{ $vocabulary//skos:Concept[@rdf:about= data($top/@rdf:resource)]//text()}</h3>
                 <div>{index:read-hierarchie($vocabulary, $rdfabout1, $label1, $voc)}</div>
                 </div>              
              
                
          else if($coll != 'person') then
          <ul>
          {
              if ($vocabulary//skos:Concept) then               
              for $g in $vocabulary//skos:Concept
              let $rdfabout := substring-after(data($g/@rdf:about), '#')

              let $label:= if ($g/prefLabel/@xml:lang= $sprache) then $g/prefLabel[@xml:lang= $sprache]/text() else($g/skos:prefLabel[1]/text())
              let $memo := if($rdfabout != "") then session:set-attribute($rdfabout, $label) else ()
              order by $label
              return 
              <li><a href="{concat(conf:param('request-root'),'index/', $voc, '/', $rdfabout)}">{$label}</a></li>
             
            else()
          }
          </ul>
            
        else(
              <div class="buchstaben">             
              {for $a in $alphabet           
              let $href :=  concat(conf:param('request-root'),'index/', $voc,'?pm=', $a )
            
              return
              <span><a class="ui-button ui-widget ui-corner-all" href="{$href}">{$a}</a></span> }</div>,
               <ul class="namelist">{           
              let $parameter:= if (request:get-parameter("pm", "")) then request:get-parameter("pm", "")
              else (substring($xrx:tokenized-uri[3],3,1)) 
              return
              if ($parameter != '') then
              let $personenliste := $index:personcollection/atom:entry[contains(atom:id, $voc)]//tei:text
              let $eintrag := if($parameter != '' and $parameter != 'A-Z') then $personenliste//tei:person[starts-with(substring-after(@xml:id, 'P_'), $parameter)] 
                              else if($parameter = 'A-Z') then $personenliste//tei:person
                              else()

              let $zahlen := count($eintrag)              
              return   
               if($zahlen = 0) then <li class="no-result"><xrx:i18n><xrx:key>no-results-message</xrx:key><xrx:default>No results were found for your search.</xrx:default></xrx:i18n></li>
               (: das trifft dann zu, wenn ein Buchstabe keine NamenseintrÃ¤ge hat:)
                else(
                for $person in $eintrag
                order by $person/tei:persName
                return
                let $personid := data($person/@xml:id)
                let $name := $person/tei:persName (: [starts-with(., $parameter)] :)
                let $place := if ($name/following-sibling::tei:occupation/tei:placeName[1]/text()) then $name/following-sibling::tei:occupation/tei:placeName[1]/text() 
                else()
                let $aufbereitung := if($place) then substring-before(serialize($place), ' ') else(concat(' (', substring-after($personid, 'P_'), ')'))
                let $inhalt := concat($name/text(), ' ',$aufbereitung)
                let $memo := if($personid != "") then session:set-attribute($personid, $inhalt) else ()
                for $n in  $name                
                return                                      
                <li class="list">                
                <a href="{concat(conf:param('request-root'),'index/', $voc, '/', $personid)}">{$inhalt}</a>
                </li>   )

               else()

               }
               </ul>
            )
                  }
                </div>
             </div>
            </div> 
            
          else(
       <div class="none">//</div>
       ) 
    }  
 <div>
    {
     if($teile = 1)then (
    <div id ="centre">{$index-use-text} 
      <div class="radio" id="zentral">
        
         <ul class="choose-menu">
            {           
         for $i in $index:vocabularycollection
         let $text := if($i//atom:content//skos:ConceptScheme/skos:prefLabel/@xml:lang = $sprache) 
         then $i//atom:content//skos:ConceptScheme/skos:prefLabel[@xml:lang = $sprache]/text()
         else($i//atom:content//skos:ConceptScheme/skos:prefLabel[1]/text())

         let $name := tokenize($i//atom:id/text(), '/')[last()]
         let $memo := if($name != "") then session:set-attribute($name, $text) else ()
        
         return          
         
         <li><a class="ui-button ui-widget ui-corner-all" href="{concat(conf:param('request-root'), 'index/',tokenize($i//atom:id/text(), 'controlledVocabulary/')[2])}">{$text}</a></li>
         
             
         }
         {
        
         for $p in $index:personcollection
         let $files := util:document-name($p)         
         let $text := if($p//atom:content//tei:title[@xml:lang=$sprache]/text() !='')
          then $p//atom:content//tei:title[@xml:lang=$sprache]/text()
         else($p//atom:content//tei:title[1]/text())
         let $name := tokenize($p//atom:id/text(), '/')[last()]         
         let $memo := if($name != "") then session:set-attribute($name, $text) else ()
         
         return        
         
         <li><a class="ui-button ui-widget ui-corner-all" href="{concat(conf:param('request-root'), 'index/',tokenize($p//atom:id/text(), 'person/')[2])}">{$text}</a></li>
        
         
         }
       </ul>  
       </div>
       </div>
) 
    
    
    else if($teile = 2) then 
    let $note := if($coll = 'person') then $vocabulary//tei:sourceDesc/node()
                 else(if ($vocabulary//skos:ConceptScheme/skos:note[@xml:lang=$sprache]/node()) 
                      then $vocabulary//skos:ConceptScheme/skos:note[@xml:lang=$sprache]/node()
                      else($vocabulary//skos:ConceptScheme/skos:note[1]/node())   
                      )

    return

    <div id ="rightframe"><h2><span class="breadcrumb">{$breadcrumb1}</span></h2>

             <div>
            {$note}
            </div>   
            </div>
           
    else(
    <div id="rightframe">
      {  
      
      if ($teile = 3 and $vocabulary//skos:Concept) then
       (: let $breadcrumb1:= if ($vocabulary//skos:ConceptScheme/skos:prefLabel/@xml:lang = $sprache)then 
                             $vocabulary//skos:ConceptScheme/skos:prefLabel[@xml:lang= $sprache]/text()
                            else($vocabulary//skos:ConceptScheme/skos:prefLabel[1]/text()) 
                            :)
        let $term := concat('#', $xrx:tokenized-uri[3])
        let $breadcrumb2 := if ($vocabulary//skos:Concept[@rdf:about = $term]/skos:prefLabel/@xml:lang = $sprache)then 
                             $vocabulary//skos:Concept[@rdf:about = $term]/skos:prefLabel[@xml:lang= $sprache]/text()
                            else($vocabulary//skos:Concept[@rdf:about = $term]/skos:prefLabel[1]/text())
        let $beschreibung:= $vocabulary//skos:Concept[@rdf:about = $term]/skos:definition/node()
        let $anzahlknoten := count($beschreibung)
        let $glossar := <div class="entry">{$beschreibung}</div>
       (: wenn die Beschreibung lÃ¤nger ist, soll ein Pfeil gesetzt werden, der anzeigt, dass noch mehr Info da ist :)
      let $glossartitel := <h2>
        { if ($beschreibung and ($anzahlknoten gt 2))then  
        <span>
          
      <span class="moreless" style="display:none">     
         <xrx:resource alt="einklappen" id="ein" height="20" type="image/png" title="show more" class="ic">tag:www.monasterium.net,2011:/mom/resource/image/path_down</xrx:resource>
      </span>      
      <span class="moreless">
         <xrx:resource alt="ausklappen" id="aus" height="20" type="image/png" title="show less" class="ic">tag:www.monasterium.net,2011:/mom/resource/image/path_up</xrx:resource>
      </span>
      </span> 

          else()}
          
      {
      $breadcrumb2 
      }
      
          </h2>    
      return 
      <div>
          <div id="breadcrumb"><h2>            
           <span class="breadcrumb">{$breadcrumb1} &gt; {$breadcrumb2}</span></h2>             
           </div> 
      <div class="glossary-entry">
      {($glossartitel, $glossar)}
      </div>     
      </div>       
    
      
      else(
      let $term := $xrx:tokenized-uri[3]
      let $breadcrumb1 := if($vocabulary//tei:titleStmt/tei:title/@xml:lang = $sprache) then $vocabulary//tei:titleStmt/tei:title[@xml:lang = $sprache]/text() 
                          else($vocabulary//tei:titleStmt/tei:title[1]/text())    
      let $glossar := data($vocabulary//tei:person[@xml:id = $term]) 
      let $persname := replace($vocabulary//tei:person[@xml:id = $term]/tei:persName/text(), ',', '')      
      let $from := ('([0-9])([A-Z])', '([a-z])([A-Z])', '([a-z])(\()', '(.)([A-Z])', '(,)([a-z][A-Z])', '(\))([0-9a-zA-Z])', '(\()(\s)' )
      let $to := ('$1 $2', '$1 $2', '$1 $2', '$1 $2', '. $2', '$1 $2', '$1')      
      let $ausgabe := <div>{index:replace-multi($glossar, $from, $to)}</div>
      let $vorname := <h2>{$persname}</h2>        
      return 
         <div>
          <div id="breadcrumb"><h2>            
           <span class="breadcrumb">{$breadcrumb1} &gt; {$persname}</span></h2>             
           </div> 
      <div class="glossary-entry">
      {($vorname,$ausgabe)}
      </div>     
      </div>       
     
      )     
      }   
         
     {
        
         if ($windex:hits = 0)then
          <span class="no-result"><xrx:i18n><xrx:key>no-results-message</xrx:key><xrx:default>No results were found for your search.</xrx:default></xrx:i18n></span>
         else(
         <div class="hits">
         <span>
            <xrx:i18n>
            <xrx:key>hits</xrx:key>
            <xrx:default>Hits</xrx:default>
          </xrx:i18n></span>
          <span> { $charters:start } </span>
          <span>
          <xrx:i18n>
            <xrx:key>to</xrx:key>
            <xrx:default>to</xrx:default>
          </xrx:i18n>
          </span>
          
          <span> { $charters:stop } </span>
          <span>
          <xrx:i18n>
            <xrx:key>of</xrx:key>
            <xrx:default>of</xrx:default>
          </xrx:i18n>
          </span>
                    
          <span class="light-grey"> { $windex:hits }</span>
          <p id="block-navi">  
          {if ($windex:block != 1)then        
           <a href="?block={ $wcharters:previous-block-pos }"> <span>&lt; </span>
                        <xrx:i18n>
                            <xrx:key>previous</xrx:key>
                            <xrx:default>previous</xrx:default>
                        </xrx:i18n> 
          </a>
          else()
          }
         <span>          <xrx:i18n>
                            <xrx:key>page</xrx:key>
                            <xrx:default>page</xrx:default>
                        </xrx:i18n>
           
         </span>
         
         <span> {$windex:block}</span>
          <span>
          <xrx:i18n>
            <xrx:key>of</xrx:key>
            <xrx:default>of</xrx:default>
          </xrx:i18n>
          </span>
          <span>{$blocks}</span>
         { if ($blocks != 1 and $windex:block != $blocks)then
         <a href="?block={ $wcharters:next-block-pos }">
                        <xrx:i18n>
                            <xrx:key>next</xrx:key>
                            <xrx:default>next</xrx:default>
                        </xrx:i18n>
                        <span> &gt;</span>
          </a>
          else()}
          </p> </div>)         
        }
             
           {
          let $uri := request:get-uri()
          let $whereami := session:set-attribute('whereami', $uri) 
          for $charter at $num in $windex:index[ position() = $charters:start to $charters:stop ]
                   
          return    
       <div id="dcharter-preview-main">                          
          <xrx:subwidget>
              <xrx:atomid>tag:www.monasterium.net,2011:/mom/widget/result</xrx:atomid>
              <xrx:pass>
                <xrx:parameter>
                  <xrx:name>$constructor:charter</xrx:name>
                  <xrx:expression>root($charter)</xrx:expression>
                </xrx:parameter>              
                <xrx:parameter>
                  <xrx:name>$constructor:pos</xrx:name>
                  <xrx:expression>$num + $charters:start -1</xrx:expression>
                </xrx:parameter>
                <xrx:parameter>
                <xrx:name>$terminus</xrx:name>
                <xrx:expression>$xrx:tokenized-uri[3]</xrx:expression>
                </xrx:parameter>
                 <xrx:parameter>
                <xrx:name>$vocabular</xrx:name>
                <xrx:expression>$xrx:tokenized-uri[2]</xrx:expression>
                </xrx:parameter>             
              </xrx:pass>              
            </xrx:subwidget> 
          </div>
          }
       <div>{
         if ($windex:hits gt 0)then
       <div class="hits">
         <span>
            <xrx:i18n>
            <xrx:key>hits</xrx:key>
            <xrx:default>Hits</xrx:default>
          </xrx:i18n></span>
          <span> { $charters:start } </span>
          <span>
          <xrx:i18n>
            <xrx:key>to</xrx:key>
            <xrx:default>to</xrx:default>
          </xrx:i18n>
          </span>
          
          <span> { $charters:stop } </span>
          <span>
          <xrx:i18n>
            <xrx:key>of</xrx:key>
            <xrx:default>of</xrx:default>
          </xrx:i18n>
          </span>
                    
          <span class="light-grey"> { $windex:hits }</span>
          <p id="block-navi">  
          {if ($windex:block != 1)then        
           <a href="?block={ $wcharters:previous-block-pos }"> <span>&lt; </span>
                        <xrx:i18n>
                            <xrx:key>previous</xrx:key>
                            <xrx:default>previous</xrx:default>
                        </xrx:i18n> 
          </a>
          else()
          }
         <span>          <xrx:i18n>
                            <xrx:key>page</xrx:key>
                            <xrx:default>page</xrx:default>
                        </xrx:i18n>
           
         </span>
         
         <span> {$windex:block}</span>
          <span>
          <xrx:i18n>
            <xrx:key>of</xrx:key>
            <xrx:default>of</xrx:default>
          </xrx:i18n>
          </span>
          <span>{$blocks}</span>
         { if ($blocks != 1 and $windex:block != $blocks)then
         <a href="?block={ $wcharters:next-block-pos }">
                        <xrx:i18n>
                            <xrx:key>next</xrx:key>
                            <xrx:default>next</xrx:default>
                        </xrx:i18n>
                        <span> &gt;</span>
          </a>
          else()}
          </p>          
        </div>
      else()
      }</div>
      </div>
      
  )
    }
     </div>
    
   </div>
      </xrx:view>
      </xrx:widget>

